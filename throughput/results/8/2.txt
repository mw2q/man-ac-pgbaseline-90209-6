BEGIN;
BEGIN
EXPLAIN (ANALYZE, BUFFERS)
select
	s_acctbal,
	s_name,
	n_name,
	p_partkey,
	p_mfgr,
	s_address,
	s_phone,
	s_comment
from
	part,
	supplier,
	partsupp,
	nation,
	region
where
	p_partkey = ps_partkey
	and s_suppkey = ps_suppkey
	and p_size = 12
	and p_type like '%BRASS'
	and s_nationkey = n_nationkey
	and n_regionkey = r_regionkey
	and r_name = 'EUROPE'
	and ps_supplycost = (
		select
			min(ps_supplycost)
		from
			partsupp,
			supplier,
			nation,
			region
		where
			p_partkey = ps_partkey
			and s_suppkey = ps_suppkey
			and s_nationkey = n_nationkey
			and n_regionkey = r_regionkey
			and r_name = 'EUROPE'
	)
order by
	s_acctbal desc,
	n_name,
	s_name,
	p_partkey
LIMIT 100;
                                                                               QUERY PLAN                                                                               
------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=821020.75..821020.75 rows=1 width=190) (actual time=15270.051..15270.086 rows=100 loops=1)
   Buffers: shared hit=1652909 read=220795 written=139
   ->  Sort  (cost=821020.75..821020.75 rows=1 width=190) (actual time=15270.050..15270.069 rows=100 loops=1)
         Sort Key: public.supplier.s_acctbal, public.nation.n_name, public.supplier.s_name, part.p_partkey
         Sort Method: top-N heapsort  Memory: 51kB
         Buffers: shared hit=1652909 read=220795 written=139
         ->  Merge Join  (cost=395548.94..821020.74 rows=1 width=190) (actual time=10715.033..15258.201 rows=4652 loops=1)
               Merge Cond: (part.p_partkey = public.partsupp.ps_partkey)
               Join Filter: (public.partsupp.ps_supplycost = (SubPlan 1))
               Rows Removed by Join Filter: 1611
               Buffers: shared hit=1652901 read=220795 written=139
               ->  Index Scan using pk_part on part  (cost=0.00..102473.47 rows=7923 width=30) (actual time=0.509..2275.173 rows=7897 loops=1)
                     Filter: (((p_type)::text ~~ '%BRASS'::text) AND (p_size = 12))
                     Rows Removed by Filter: 1992103
                     Buffers: shared hit=1163 read=45578 written=4
               ->  Sort  (cost=395548.90..399548.90 rows=1600000 width=168) (actual time=10713.855..11237.097 rows=1602257 loops=1)
                     Sort Key: public.partsupp.ps_partkey
                     Sort Method: quicksort  Memory: 474854kB
                     Buffers: shared hit=1498306 read=171120 written=135
                     ->  Nested Loop  (cost=1.56..230671.78 rows=1600000 width=168) (actual time=0.206..8624.174 rows=1602640 loops=1)
                           Buffers: shared hit=1498306 read=171120 written=135
                           ->  Nested Loop  (cost=1.56..5806.62 rows=20000 width=164) (actual time=0.092..203.140 rows=20033 loops=1)
                                 Join Filter: (public.nation.n_regionkey = public.region.r_regionkey)
                                 Rows Removed by Join Filter: 79967
                                 Buffers: shared hit=2181
                                 ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.013..0.024 rows=1 loops=1)
                                       Filter: (r_name = 'EUROPE'::bpchar)
                                       Rows Removed by Filter: 4
                                       Buffers: shared hit=1
                                 ->  Hash Join  (cost=1.56..4555.56 rows=100000 width=168) (actual time=0.065..176.652 rows=100000 loops=1)
                                       Hash Cond: (public.supplier.s_nationkey = public.nation.n_nationkey)
                                       Buffers: shared hit=2180
                                       ->  Seq Scan on supplier  (cost=0.00..3179.00 rows=100000 width=142) (actual time=0.015..60.946 rows=100000 loops=1)
                                             Buffers: shared hit=2179
                                       ->  Hash  (cost=1.25..1.25 rows=25 width=34) (actual time=0.027..0.027 rows=25 loops=1)
                                             Buckets: 1024  Batches: 1  Memory Usage: 2kB
                                             Buffers: shared hit=1
                                             ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34) (actual time=0.007..0.012 rows=25 loops=1)
                                                   Buffers: shared hit=1
                           ->  Index Scan using partsupp_ps_suppkey_idx on partsupp  (cost=0.00..10.44 rows=80 width=12) (actual time=0.027..0.385 rows=80 loops=20033)
                                 Index Cond: (ps_suppkey = public.supplier.s_suppkey)
                                 Buffers: shared hit=1496125 read=171120 written=135
               SubPlan 1
                 ->  Aggregate  (cost=49.85..49.86 rows=1 width=4) (actual time=0.137..0.137 rows=1 loops=6263)
                       Buffers: shared hit=153432 read=4097
                       ->  Nested Loop  (cost=0.00..49.84 rows=1 width=4) (actual time=0.091..0.133 rows=2 loops=6263)
                             Join Filter: (public.nation.n_regionkey = public.region.r_regionkey)
                             Rows Removed by Join Filter: 2
                             Buffers: shared hit=153432 read=4097
                             ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.006..0.007 rows=1 loops=6263)
                                   Filter: (r_name = 'EUROPE'::bpchar)
                                   Rows Removed by Filter: 4
                                   Buffers: shared hit=6263
                             ->  Nested Loop  (cost=0.00..48.73 rows=4 width=8) (actual time=0.060..0.123 rows=4 loops=6263)
                                   Buffers: shared hit=147169 read=4097
                                   ->  Nested Loop  (cost=0.00..47.61 rows=4 width=8) (actual time=0.052..0.098 rows=4 loops=6263)
                                         Buffers: shared hit=97065 read=4097
                                         ->  Index Scan using pk_partsupp on partsupp  (cost=0.00..14.45 rows=4 width=8) (actual time=0.035..0.037 rows=4 loops=6263)
                                               Index Cond: (part.p_partkey = ps_partkey)
                                               Buffers: shared hit=21760 read=4097
                                         ->  Index Scan using pk_supplier on supplier  (cost=0.00..8.28 rows=1 width=8) (actual time=0.013..0.013 rows=1 loops=25052)
                                               Index Cond: (s_suppkey = public.partsupp.ps_suppkey)
                                               Buffers: shared hit=75305
                                   ->  Index Scan using pk_nation on nation  (cost=0.00..0.27 rows=1 width=8) (actual time=0.004..0.005 rows=1 loops=25052)
                                         Index Cond: (n_nationkey = public.supplier.s_nationkey)
                                         Buffers: shared hit=50104
 Total runtime: 15295.918 ms
(67 rows)

COMMIT;
COMMIT
