BEGIN;
BEGIN
EXPLAIN (ANALYZE, BUFFERS)
select
	o_year,
	sum(case
		when nation = 'FRANCE' then volume
		else 0
	end) / sum(volume) as mkt_share
from
	(
		select
			extract(year from o_orderdate) as o_year,
			l_extendedprice * (1 - l_discount) as volume,
			n2.n_name as nation
		from
			part,
			supplier,
			lineitem,
			orders,
			customer,
			nation n1,
			nation n2,
			region
		where
			p_partkey = l_partkey
			and s_suppkey = l_suppkey
			and l_orderkey = o_orderkey
			and o_custkey = c_custkey
			and c_nationkey = n1.n_nationkey
			and n1.n_regionkey = r_regionkey
			and r_name = 'EUROPE'
			and s_nationkey = n2.n_nationkey
			and o_orderdate between date '1995-01-01' and date '1996-12-31'
			and p_type = 'PROMO POLISHED BRASS'
	) as all_nations
group by
	o_year
order by
	o_year;
                                                                                                 QUERY PLAN                                                                                                  
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Sort  (cost=2173962.71..2173964.53 rows=731 width=38) (actual time=29540.514..29540.515 rows=2 loops=1)
   Sort Key: (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
   Sort Method: quicksort  Memory: 25kB
   Buffers: shared hit=844881 read=172000 dirtied=1142 written=20
   ->  HashAggregate  (cost=2173915.14..2173927.93 rows=731 width=38) (actual time=29540.443..29540.446 rows=2 loops=1)
         Buffers: shared hit=844878 read=172000 dirtied=1142 written=20
         ->  Nested Loop  (cost=496939.87..2173426.66 rows=24424 width=38) (actual time=21890.085..29469.938 rows=24854 loops=1)
               Buffers: shared hit=844878 read=172000 dirtied=1142 written=20
               ->  Nested Loop  (cost=496939.87..2166460.94 rows=24424 width=16) (actual time=21890.029..29275.054 rows=24854 loops=1)
                     Buffers: shared hit=795170 read=172000 dirtied=1142 written=20
                     ->  Hash Join  (cost=496939.87..2159348.60 rows=24424 width=16) (actual time=21889.996..28910.481 rows=24854 loops=1)
                           Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                           Buffers: shared hit=720444 read=172000 dirtied=1142 written=20
                           ->  Nested Loop  (cost=0.00..1660152.89 rows=402320 width=16) (actual time=0.399..5691.489 rows=408657 loops=1)
                                 Buffers: shared hit=320655 read=158589 dirtied=1142 written=19
                                 ->  Index Only Scan using part_p_type_p_partkey_idx on part  (cost=0.00..46381.92 rows=13347 width=4) (actual time=0.325..275.375 rows=13596 loops=1)
                                       Index Cond: (p_type = 'PROMO POLISHED BRASS'::text)
                                       Heap Fetches: 13596
                                       Buffers: shared hit=1 read=11675 written=1
                                 ->  Index Scan using lineitem_l_partkey_l_quantity_l_shipmode_idx on lineitem  (cost=0.00..120.60 rows=31 width=20) (actual time=0.042..0.382 rows=30 loops=13596)
                                       Index Cond: (l_partkey = part.p_partkey)
                                       Buffers: shared hit=320654 read=146914 dirtied=1142 written=18
                           ->  Hash  (cost=485500.07..485500.07 rows=915184 width=8) (actual time=21888.640..21888.640 rows=912880 loops=1)
                                 Buckets: 131072  Batches: 1  Memory Usage: 35660kB
                                 Buffers: shared hit=399786 read=13411 written=1
                                 ->  Hash Join  (cost=136015.71..485500.07 rows=915184 width=8) (actual time=4865.501..21325.728 rows=912880 loops=1)
                                       Hash Cond: (orders.o_custkey = customer.c_custkey)
                                       Buffers: shared hit=399786 read=13411 written=1
                                       ->  Bitmap Heap Scan on orders  (cost=96985.09..420157.91 rows=4575921 width=12) (actual time=3493.928..7967.461 rows=4557142 loops=1)
                                             Recheck Cond: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                             Buffers: shared hit=254530 read=12490 written=1
                                             ->  Bitmap Index Scan on orders_o_orderdate_o_orderkey_idx  (cost=0.00..95841.11 rows=4575921 width=0) (actual time=3293.291..3293.291 rows=4579958 loops=1)
                                                   Index Cond: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                                   Buffers: shared read=12486 written=1
                                       ->  Hash  (cost=35280.62..35280.62 rows=300000 width=4) (actual time=1371.333..1371.333 rows=300963 loops=1)
                                             Buckets: 32768  Batches: 1  Memory Usage: 10581kB
                                             Buffers: shared hit=145256 read=921
                                             ->  Nested Loop  (cost=906.17..35280.62 rows=300000 width=4) (actual time=30.083..1194.676 rows=300963 loops=1)
                                                   Buffers: shared hit=145256 read=921
                                                   ->  Hash Join  (cost=1.07..2.47 rows=5 width=4) (actual time=0.033..0.080 rows=5 loops=1)
                                                         Hash Cond: (n1.n_regionkey = region.r_regionkey)
                                                         Buffers: shared hit=2
                                                         ->  Seq Scan on nation n1  (cost=0.00..1.25 rows=25 width=8) (actual time=0.005..0.018 rows=25 loops=1)
                                                               Buffers: shared hit=1
                                                         ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.015..0.015 rows=1 loops=1)
                                                               Buckets: 1024  Batches: 1  Memory Usage: 1kB
                                                               Buffers: shared hit=1
                                                               ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.012..0.013 rows=1 loops=1)
                                                                     Filter: (r_name = 'EUROPE'::bpchar)
                                                                     Rows Removed by Filter: 4
                                                                     Buffers: shared hit=1
                                                   ->  Bitmap Heap Scan on customer  (cost=905.09..6455.63 rows=60000 width=8) (actual time=32.043..219.040 rows=60193 loops=5)
                                                         Recheck Cond: (c_nationkey = n1.n_nationkey)
                                                         Buffers: shared hit=145254 read=921
                                                         ->  Bitmap Index Scan on customer_c_nationkey_c_custkey_idx  (cost=0.00..890.09 rows=60000 width=0) (actual time=21.509..21.509 rows=60193 loops=5)
                                                               Index Cond: (c_nationkey = n1.n_nationkey)
                                                               Buffers: shared hit=6 read=833
                     ->  Index Scan using pk_supplier on supplier  (cost=0.00..0.28 rows=1 width=8) (actual time=0.012..0.012 rows=1 loops=24854)
                           Index Cond: (s_suppkey = lineitem.l_suppkey)
                           Buffers: shared hit=74726
               ->  Index Scan using pk_nation on nation n2  (cost=0.00..0.27 rows=1 width=30) (actual time=0.004..0.005 rows=1 loops=24854)
                     Index Cond: (n_nationkey = supplier.s_nationkey)
                     Buffers: shared hit=49708
 Total runtime: 29557.608 ms
(64 rows)

COMMIT;
COMMIT
