BEGIN;
BEGIN
EXPLAIN (ANALYZE, BUFFERS)
select
	c_custkey,
	c_name,
	sum(l_extendedprice * (1 - l_discount)) as revenue,
	c_acctbal,
	n_name,
	c_address,
	c_phone,
	c_comment
from
	customer,
	orders,
	lineitem,
	nation
where
	c_custkey = o_custkey
	and l_orderkey = o_orderkey
	and o_orderdate >= date '1994-12-01'
	and o_orderdate < cast(date '1994-12-01' + interval '3 month' as date)
	and l_returnflag = 'R'
	and c_nationkey = n_nationkey
group by
	c_custkey,
	c_name,
	c_acctbal,
	c_phone,
	n_name,
	c_address,
	c_comment
order by
	revenue desc
LIMIT 20;
                                                                                                QUERY PLAN                                                                                                 
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1180615.87..1180615.92 rows=20 width=175) (actual time=23096.562..23096.569 rows=20 loops=1)
   Buffers: shared hit=282150 read=1125485
   ->  Sort  (cost=1180615.87..1182001.37 rows=554200 width=175) (actual time=23096.558..23096.561 rows=20 loops=1)
         Sort Key: (sum((lineitem.l_extendedprice * (1::double precision - lineitem.l_discount))))
         Sort Method: top-N heapsort  Memory: 30kB
         Buffers: shared hit=282150 read=1125485
         ->  HashAggregate  (cost=1160326.80..1165868.80 rows=554200 width=175) (actual time=22581.607..22952.914 rows=371402 loops=1)
               Buffers: shared hit=282147 read=1125485
               ->  Hash Join  (cost=396388.09..1146471.80 rows=554200 width=175) (actual time=4374.972..20852.041 rows=1080378 loops=1)
                     Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                     Buffers: shared hit=282147 read=1125485
                     ->  Hash Join  (cost=396386.53..1138849.99 rows=554200 width=153) (actual time=4374.932..20505.564 rows=1080378 loops=1)
                           Hash Cond: (orders.o_custkey = customer.c_custkey)
                           Buffers: shared hit=282146 read=1125485
                           ->  Merge Join  (cost=327358.53..1058737.99 rows=554200 width=12) (actual time=2892.272..17480.023 rows=1080378 loops=1)
                                 Merge Cond: (orders.o_orderkey = lineitem.l_orderkey)
                                 Buffers: shared hit=282144 read=1090209
                                 ->  Sort  (cost=327358.53..328760.18 rows=560660 width=8) (actual time=2892.031..3007.872 rows=561878 loops=1)
                                       Sort Key: orders.o_orderkey
                                       Sort Method: quicksort  Memory: 50915kB
                                       Buffers: shared hit=38227 read=190378
                                       ->  Bitmap Heap Scan on orders  (cost=11892.66..273824.56 rows=560660 width=8) (actual time=232.860..2692.623 rows=561878 loops=1)
                                             Recheck Cond: ((o_orderdate >= '1994-12-01'::date) AND (o_orderdate < '1995-03-01'::date))
                                             Buffers: shared hit=38227 read=190378
                                             ->  Bitmap Index Scan on orders_o_orderdate_o_orderkey_idx  (cost=0.00..11752.50 rows=560660 width=0) (actual time=155.194..155.194 rows=561878 loops=1)
                                                   Index Cond: ((o_orderdate >= '1994-12-01'::date) AND (o_orderdate < '1995-03-01'::date))
                                                   Buffers: shared read=1537
                                 ->  Index Scan using lineitem_l_orderkey_idx_l_returnflag on lineitem  (cost=0.00..685931.42 rows=14841974 width=12) (actual time=0.104..12617.354 rows=14822990 loops=1)
                                       Buffers: shared hit=243917 read=899831
                           ->  Hash  (cost=50278.00..50278.00 rows=1500000 width=145) (actual time=1480.552..1480.552 rows=1500000 loops=1)
                                 Buckets: 262144  Batches: 1  Memory Usage: 265117kB
                                 Buffers: shared hit=2 read=35276
                                 ->  Seq Scan on customer  (cost=0.00..50278.00 rows=1500000 width=145) (actual time=0.003..669.599 rows=1500000 loops=1)
                                       Buffers: shared hit=2 read=35276
                     ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.027..0.027 rows=25 loops=1)
                           Buckets: 1024  Batches: 1  Memory Usage: 2kB
                           Buffers: shared hit=1
                           ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30) (actual time=0.009..0.010 rows=25 loops=1)
                                 Buffers: shared hit=1
 Total runtime: 23121.589 ms
(40 rows)

COMMIT;
COMMIT
