BEGIN;
BEGIN
EXPLAIN (ANALYZE, BUFFERS)
select
	n_name,
	sum(l_extendedprice * (1 - l_discount)) as revenue
from
	customer,
	orders,
	lineitem,
	supplier,
	nation,
	region
where
	c_custkey = o_custkey
	and l_orderkey = o_orderkey
	and l_suppkey = s_suppkey
	and c_nationkey = s_nationkey
	and s_nationkey = n_nationkey
	and n_regionkey = r_regionkey
	and r_name = 'EUROPE'
	and o_orderdate >= date '1995-01-01'
	and o_orderdate < date '1995-01-01' + interval '1 year'
group by
	n_name
order by
	revenue desc;
                                                                                              QUERY PLAN                                                                                               
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Sort  (cost=2422570.74..2422570.81 rows=25 width=34) (actual time=48472.221..48472.221 rows=5 loops=1)
   Sort Key: (sum((lineitem.l_extendedprice * (1::double precision - lineitem.l_discount))))
   Sort Method: quicksort  Memory: 25kB
   Buffers: shared hit=759368 read=715193
   ->  HashAggregate  (cost=2422569.91..2422570.16 rows=25 width=34) (actual time=48472.151..48472.153 rows=5 loops=1)
         Buffers: shared hit=759365 read=715193
         ->  Hash Join  (cost=399014.16..2421837.56 rows=73235 width=34) (actual time=11302.382..48402.321 rows=72710 loops=1)
               Hash Cond: ((lineitem.l_suppkey = supplier.s_suppkey) AND (customer.c_nationkey = supplier.s_nationkey))
               Buffers: shared hit=759365 read=715193
               ->  Hash Join  (cost=394335.16..2379809.01 rows=1830860 width=46) (actual time=11226.581..44024.350 rows=1824150 loops=1)
                     Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                     Buffers: shared hit=759315 read=713061
                     ->  Seq Scan on lineitem  (cost=0.00..1666935.17 rows=60046017 width=16) (actual time=0.009..10663.119 rows=60045669 loops=1)
                           Buffers: shared hit=649241 read=417234
                     ->  Hash  (cost=388612.40..388612.40 rows=457821 width=38) (actual time=11225.613..11225.613 rows=456109 loops=1)
                           Buckets: 65536  Batches: 1  Memory Usage: 32071kB
                           Buffers: shared hit=110074 read=295827
                           ->  Hash Join  (cost=87591.45..388612.40 rows=457821 width=38) (actual time=1818.859..10976.051 rows=456109 loops=1)
                                 Hash Cond: (orders.o_custkey = customer.c_custkey)
                                 Buffers: shared hit=110074 read=295827
                                 ->  Bitmap Heap Scan on orders  (cost=48549.23..336407.82 rows=2289106 width=8) (actual time=851.955..3567.906 rows=2277830 loops=1)
                                       Recheck Cond: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate < '1996-01-01 00:00:00'::timestamp without time zone))
                                       Buffers: shared hit=3 read=259720
                                       ->  Bitmap Index Scan on orders_o_orderdate_o_orderkey_idx  (cost=0.00..47976.96 rows=2289106 width=0) (actual time=752.688..752.688 rows=2277830 loops=1)
                                             Index Cond: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate < '1996-01-01 00:00:00'::timestamp without time zone))
                                             Buffers: shared read=6221
                                 ->  Hash  (cost=35292.22..35292.22 rows=300000 width=38) (actual time=966.637..966.637 rows=300963 loops=1)
                                       Buckets: 32768  Batches: 1  Memory Usage: 21162kB
                                       Buffers: shared hit=110071 read=36107
                                       ->  Nested Loop  (cost=905.09..35292.22 rows=300000 width=38) (actual time=19.885..859.123 rows=300963 loops=1)
                                             Buffers: shared hit=110071 read=36107
                                             ->  Nested Loop  (cost=0.00..14.07 rows=5 width=30) (actual time=0.068..0.145 rows=5 loops=1)
                                                   Join Filter: (nation.n_regionkey = region.r_regionkey)
                                                   Rows Removed by Join Filter: 20
                                                   Buffers: shared hit=3
                                                   ->  Index Scan using pk_nation on nation  (cost=0.00..12.63 rows=25 width=34) (actual time=0.017..0.050 rows=25 loops=1)
                                                         Buffers: shared hit=2
                                                   ->  Materialize  (cost=0.00..1.07 rows=1 width=4) (actual time=0.002..0.002 rows=1 loops=25)
                                                         Buffers: shared hit=1
                                                         ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.030..0.031 rows=1 loops=1)
                                                               Filter: (r_name = 'EUROPE'::bpchar)
                                                               Rows Removed by Filter: 4
                                                               Buffers: shared hit=1
                                             ->  Bitmap Heap Scan on customer  (cost=905.09..6455.63 rows=60000 width=8) (actual time=17.409..158.772 rows=60193 loops=5)
                                                   Recheck Cond: (c_nationkey = nation.n_nationkey)
                                                   Buffers: shared hit=110068 read=36107
                                                   ->  Bitmap Index Scan on customer_c_nationkey_c_custkey_idx  (cost=0.00..890.09 rows=60000 width=0) (actual time=11.491..11.491 rows=60193 loops=5)
                                                         Index Cond: (c_nationkey = nation.n_nationkey)
                                                         Buffers: shared hit=6 read=833
               ->  Hash  (cost=3179.00..3179.00 rows=100000 width=8) (actual time=74.554..74.554 rows=100000 loops=1)
                     Buckets: 16384  Batches: 1  Memory Usage: 3907kB
                     Buffers: shared hit=47 read=2132
                     ->  Seq Scan on supplier  (cost=0.00..3179.00 rows=100000 width=8) (actual time=0.009..46.547 rows=100000 loops=1)
                           Buffers: shared hit=47 read=2132
 Total runtime: 48478.541 ms
(55 rows)

COMMIT;
COMMIT
